{"version":3,"file":"itee-server.cjs.js","sources":["../sources/TBackendManager.js"],"sourcesContent":["/**\n * @author [Tristan Valcke]{@link https://github.com/Itee}\n * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}\n *\n * @file Todo\n *\n * @example Todo\n *\n */\n\nimport express from 'express'\nimport http    from 'http'\nimport https   from 'https'\nimport {\n    DefaultLogger,\n    TAbstractObject\n}              from 'itee-core'\n//todo: import Databases from 'itee-database'\nimport {\n    isArray,\n    isBlankString,\n    isDefined,\n    isEmptyString,\n    isNotArray,\n    isNotString,\n    isNull,\n    isUndefined\n}              from 'itee-validators'\nimport path    from 'path'\n\nclass TBackendManager extends TAbstractObject {\n\n    constructor( parameters = {} ) {\n\n        const _parameters = {\n            ...{\n                logger:       DefaultLogger,\n                rootPath:     __dirname,\n                applications: [],\n                databases:    [],\n                servers:      []\n            },\n            ...parameters\n        }\n\n        super( _parameters )\n\n        this.logger       = _parameters.logger\n        this.rootPath     = _parameters.rootPath\n        this.applications = express()\n        this.router       = express.Router\n        this.databases    = new Map()\n        this.servers      = new Map()\n        this.connections  = []\n\n        this._initApplications( _parameters.applications )\n        this._initDatabases( _parameters.databases )\n        this._initServers( _parameters.servers )\n\n    }\n    get applications() {\n        return this._applications\n    }\n    set applications( value ) {\n        this._applications = value\n    }\n    get router() {\n        return this._router\n    }\n\n    // Todo remove middleware\n    set router( value ) {\n        this._router = value\n    }\n    get databases() {\n        return this._databases\n    }\n    set databases( value ) {\n        this._databases = value\n    }\n    get servers() {\n        return this._servers\n    }\n    set servers( value ) {\n        this._servers = value\n    }\n    get rootPath() {\n\n        return this._rootPath\n\n    }\n    set rootPath( value ) {\n\n        if ( isNull( value ) ) { throw new TypeError( 'Root path cannot be null ! Expect a non empty string.' ) }\n        if ( isUndefined( value ) ) { throw new TypeError( 'Root path cannot be undefined ! Expect a non empty string.' ) }\n        if ( isNotString( value ) ) { throw new TypeError( `Root path cannot be an instance of ${ value.constructor.name } ! Expect a non empty string.` ) }\n        if ( isEmptyString( value ) ) { throw new TypeError( 'Root path cannot be empty ! Expect a non empty string.' ) }\n        if ( isBlankString( value ) ) { throw new TypeError( 'Root path cannot contain only whitespace ! Expect a non empty string.' ) }\n\n        this._rootPath = value\n\n    }\n    setApplications( value ) {\n\n        this.applications = value\n        return this\n\n    }\n    addMiddleware( middleware ) {\n\n        this.applications.use( middleware )\n        return this\n\n    }\n    setRouter( value ) {\n\n        this.router = value\n        return this\n\n    }\n    setDatabases( value ) {\n\n        this.databases = value\n        return this\n\n    }\n    addDatabase( databaseName, database ) {\n\n        this._databases.set( databaseName, database )\n        return this\n\n    }\n    setServers( value ) {\n\n        this.servers = value\n        return this\n\n    }\n    setRootPath( value ) {\n\n        this.rootPath = value\n        return this\n\n    }\n\n    _initApplications( config ) {\n\n        if ( config.case_sensitive_routing ) { this.applications.set( 'case sensitive routing', config.case_sensitive_routing ) }\n        if ( config.env ) { this.applications.set( 'env', config.env ) }\n        if ( config.etag ) { this.applications.set( 'etag', config.etag ) }\n        if ( config.jsonp_callback_name ) { this.applications.set( 'jsonp callback name', config.jsonp_callback_name ) }\n        if ( config.jsonp_escape ) { this.applications.set( 'json escape', config.jsonp_escape ) }\n        if ( config.jsonp_replacer ) { this.applications.set( 'json replacer', config.jsonp_replacer ) }\n        if ( config.jsonp_spaces ) { this.applications.set( 'json spaces', config.jsonp_spaces ) }\n        if ( config.query_parser ) { this.applications.set( 'query parser', config.query_parser ) }\n        if ( config.strict_routing ) { this.applications.set( 'strict routing', config.strict_routing ) }\n        if ( config.subdomain_offset ) { this.applications.set( 'subdomain offset', config.subdomain_offset ) }\n        if ( config.trust_proxy ) { this.applications.set( 'trust proxy', config.trust_proxy ) }\n        if ( config.views ) { this.applications.set( 'views', config.views ) }\n        if ( config.view_cache ) { this.applications.set( 'view cache', config.view_cache ) }\n        if ( config.view_engine ) { this.applications.set( 'view engine', config.view_engine ) }\n        if ( config.x_powered_by ) { this.applications.set( 'x-powered-by', config.x_powered_by ) }\n\n        this._initMiddlewares( config.middlewares )\n        this._initRouters( config.routers )\n\n    }\n\n    _initMiddlewares( middlewaresConfig ) {\n\n        for ( let [ name, config ] of Object.entries( middlewaresConfig ) ) {\n\n            if ( isNotArray( config ) ) {\n                throw new TypeError( `Invalid middlware configuration for ${ name }, expecting an array of arguments to spread to middleware module, got ${ config.constructor.name }` )\n            }\n\n            if ( this._initPackageMiddleware( name, config ) ) {\n\n                this.logger.log( `Use ${ name } middleware from node_modules` )\n\n            } else if ( this._initLocalMiddleware( name, config ) ) {\n\n                this.logger.log( `Use ${ name } middleware from local folder` )\n\n            } else {\n\n                this.logger.error( `Unable to register the middleware ${ name } the package and/or local file doesn't seem to exist ! Skip it.` )\n\n            }\n\n        }\n\n    }\n\n    _initPackageMiddleware( name, config ) {\n\n        let success = false\n\n        try {\n\n            this.applications.use( require( name )( ...config ) )\n            success = true\n\n        } catch ( error ) {\n\n            if ( !error.code || error.code !== 'MODULE_NOT_FOUND' ) {\n\n                this.logger.error( `The middleware \"${ name }\" seems to encounter internal error.` )\n                this.logger.error( error )\n\n            }\n\n        }\n\n        return success\n\n    }\n\n    _initLocalMiddleware( name, config ) {\n\n        let success = false\n\n        try {\n\n            const localMiddlewaresPath = path.join( this.rootPath, 'middlewares', name )\n            this.applications.use( require( localMiddlewaresPath )( ...config ) )\n            success = true\n\n        } catch ( error ) {\n\n            this.logger.error( error )\n\n        }\n\n        return success\n\n    }\n\n    _initRouters( routers ) {\n\n        for ( let [ baseRoute, routerPath ] of Object.entries( routers ) ) {\n\n            if ( this._initPackageRouter( baseRoute, routerPath ) ) {\n\n                this.logger.log( `Use ${ routerPath } router from node_modules over base route: ${ baseRoute }` )\n\n            } else if ( this._initLocalRouter( baseRoute, routerPath ) ) {\n\n                this.logger.log( `Use ${ routerPath } router from local folder over base route: ${ baseRoute }` )\n\n            } else {\n\n                this.logger.error( `Unable to register the router ${ routerPath } the package and/or local file doesn't seem to exist ! Skip it.` )\n\n            }\n\n        }\n\n    }\n\n    _initPackageRouter( baseRoute, routerPath ) {\n\n        let success = false\n\n        try {\n\n            this.applications.use( baseRoute, require( routerPath ) )\n            success = true\n\n        } catch ( error ) {\n\n            if ( !error.code || error.code !== 'MODULE_NOT_FOUND' ) {\n\n                this.logger.error( `The router \"${ baseRoute }\" seems to encounter internal error.` )\n                this.logger.error( error )\n\n            }\n\n        }\n\n        return success\n\n    }\n\n    _initLocalRouter( baseRoute, routerPath ) {\n\n        let success = false\n\n        try {\n\n            const localRoutersPath = path.join( this.rootPath, 'routers', routerPath )\n            this.applications.use( baseRoute, require( localRoutersPath ) )\n            success = true\n\n        } catch ( error ) {\n\n            if ( error instanceof TypeError && error.message === 'Found non-callable @@iterator' ) {\n\n                this.logger.error( `The router \"${ baseRoute }\" seems to encounter error ! Are you using an object instead an array for router configuration ?` )\n\n            }\n\n            this.logger.error( error )\n\n        }\n\n        return success\n\n    }\n\n    _initDatabases( config ) {\n\n        for ( let configIndex = 0, numberOfDatabasesConfigs = config.length ; configIndex < numberOfDatabasesConfigs ; configIndex++ ) {\n\n            const databaseConfig = config[ configIndex ]\n            const dbType         = databaseConfig.type\n            const dbFrom         = databaseConfig.from\n            const dbName         = `${ ( databaseConfig.name ) ? databaseConfig.name : `${ dbType }_${ configIndex }` }`\n\n            try {\n\n                let database = null\n\n                if ( isDefined( dbFrom ) ) {\n\n                    // In case user specify a package where take the database of type...\n                    const databasePackage = require( dbFrom )\n                    database              = new databasePackage[ dbType ]( {\n                        ...{\n                            application: this.applications,\n                            router:      this.router\n                        },\n                        ...databaseConfig\n                    } )\n\n                } else {\n\n                    //                    // Else try to use auto registered database\n                    //                    database = new Databases[ dbType ]( {\n                    //                        ...{\n                    //                            application: this.applications,\n                    //                            router:      this.router\n                    //                        },\n                    //                        ...databaseConfig\n                    //                    } )\n\n                }\n\n                // Todo move in start\n                database.connect()\n\n                this.databases.set( dbName, database )\n\n            } catch ( error ) {\n\n                this.logger.error( `Unable to create database of type ${ dbType } due to ${ error.name }` )\n                this.logger.error( error.message )\n                this.logger.error( error.stack )\n\n            }\n\n        }\n\n    }\n\n    _initServers( config ) {\n\n        const _config = ( isArray( config ) ) ? config : [ config ]\n\n        for ( let configId = 0, numberOfConfigs = _config.length ; configId < numberOfConfigs ; configId++ ) {\n\n            let configElement = _config[ configId ]\n            let server        = null\n\n            if ( configElement.type === 'https' ) {\n\n                const options = {\n                    pfx:        configElement.pfx,\n                    passphrase: configElement.passphrase\n                }\n\n                server = https.createServer( options, this.applications )\n\n            } else {\n\n                server = http.createServer( this.applications )\n\n            }\n\n            server.name            = configElement.name || `${ ( configElement.name ) ? configElement.name : `Server_${ configId }` }`\n            server.maxHeadersCount = configElement.max_headers_count\n            server.timeout         = configElement.timeout\n            server.type            = configElement.type\n            server.host            = configElement.host\n            server.port            = configElement.port\n            server.env             = configElement.env\n            server.listen( configElement.port, configElement.host, () => {\n                this.logger.log( `${ server.name } start listening on ${ server.type }://${ server.host }:${ server.port } at ${ new Date() } under ${ server.env } environment.` )\n            } )\n            server.on( 'connection', connection => {\n                this.connections.push( connection )\n                connection.on( 'close', () => {\n                    this.connections = this.connections.filter( curr => curr !== connection )\n                } )\n            } )\n\n            this.servers.set( server.name, server )\n\n        }\n\n    }\n\n    /**\n     *\n     * @param databaseKey\n     * @param eventName\n     * @param callback\n     */\n    databaseOn( databaseKey, eventName, callback ) {} // eslint-disable-line no-unused-vars\n\n    serverOn( serverName, eventName, callback ) {\n\n        this.servers[ serverName ].on( eventName, callback )\n\n    }\n\n    serversOn( serverKey, eventName, callback ) {\n\n        //TODO: filter availaible events\n        // [ 'request', 'connection', 'close', 'timeout', 'checkContinue', 'connect', 'upgrade', 'clientError' ]\n        for ( let serverKey in this.servers ) {\n            this.serverOn( serverKey, eventName, callback )\n        }\n\n    }\n\n    start() {\n\n    }\n\n    stop( callback ) {\n\n        const numberOfServers   = this.servers.size\n        const numberOfDatabases = this.databases.size\n        let shutDownServers     = 0\n        let closedDatabases     = 0\n\n        if ( allClosed() ) { return }\n\n        for ( const [ databaseName, database ] of this.databases ) {\n\n            database.close( () => {\n\n                closedDatabases++\n                this.logger.log( `Connection to ${ databaseName } is closed.` )\n\n                allClosed()\n\n            } )\n\n        }\n\n        for ( let connection of this.connections ) {\n            connection.end()\n        }\n\n        for ( const [ serverName, server ] of this.servers ) {\n\n            server.close( () => {\n\n                shutDownServers++\n                this.logger.log( `The ${ serverName } listening on ${ server.type }://${ server.host }:${ server.port } is shutted down.` )\n\n                allClosed()\n\n            } )\n\n        }\n\n        function allClosed() {\n\n            if ( shutDownServers < numberOfServers ) {\n                return false\n            }\n\n            if ( closedDatabases < numberOfDatabases ) {\n                return false\n            }\n\n            if ( callback ) { callback() }\n\n        }\n\n    }\n\n    closeServers() {\n\n    }\n\n}\n\nexport { TBackendManager }\n"],"names":["TAbstractObject","DefaultLogger","express","isNull","isUndefined","isNotString","isEmptyString","isBlankString","isNotArray","path","isDefined","isArray","https","http"],"mappings":"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"}